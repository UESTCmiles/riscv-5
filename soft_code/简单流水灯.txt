0x00: LUI x1, 0x00004
0x04: ADDI x1, x1, 0x000 ;R1 = GPIO外设基地址
0x08: LUI x2, 0xFFFFF
0x0C: ADDI x2, x2, 0xF00 ;R2 = 0xFFFFFF00
0x10: SW x2, 0x008(x1) ;*(R1 + GPIO外设的方向寄存器偏移量) = R2
0x14: ADDI x5, x0, 0x0FF ;R5 = 0x000000FF
0x18: ADDI x3, x0, 0x008 ;R3 = 0x00000008
0x1C: ADDI x4, x0, 0x000 ;R4 = 0x00000000
0x20: BGEU x4, x3, 56 ;if(R4 >= R3) 跳到0x58
0x24: SW x5, 0x004(x1) ;*(R1 + GPIO外设的写电平掩码寄存器偏移量) = R5
0x28: ADDI x6, x0, 0x001 ;x6 = 0x00000001
0x2C: SLL x6, x6, x4 ;x6 = x6 << x4
0x30: SW x6, 0x000(x1) ;*(R1 + GPIO外设的写电平寄存器偏移量) = R6
0x34: ADDI x7, x0, 0x000 ;R7 = 0
0x38: LUI x8, 0x004C4
0x3C: ADDI x8, x8, 0xB40 ;R8 = 5000000
0x40: BGEU x7, x8, 16 ;if(R7 >= R8) 跳到0x50
0x44: ADDI x0, x0, 0x000 ;NOP
0x48: ADDI x7, x7, 0x001 ;R7++
0x4C: JAL x0, -12 ;跳到0x40
0x50: ADDI x4, x4, 0x001 ;R4++
0x54: JAL x0, -52 ;跳到0x20
0x58: JAL x0, -60 ;跳到0x1C
